generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Actions {
  id            String       @id
  description   String
  createdAt     DateTime?    @default(now()) @map("created_at")
  updatedAt     DateTime?    @updatedAt @map("updated_at")
  Permissions   Permissions? @relation(fields: [permissionsId], references: [id])
  permissionsId String?

  @@map("actions")
}

model Permissions {
  id              String    @id
  description     String
  active          Boolean
  createdAt       DateTime? @default(now()) @map("created_at")
  updatedAt       DateTime? @updatedAt @map("updated_at")
  fullPrivilegies Boolean   @map("full_privileges")
  actions         Actions[]
  User            User[]

  @@map("permissions")
}

model AddressType {
  id          String      @id
  description String
  createdAt   DateTime?   @default(now()) @map("created_at")
  updatedAt   DateTime?   @updatedAt @map("updated_at")
  address     Addresses[]

  @@map("address_type")
}

model Addresses {
  id            String       @id
  address       String
  zipCode       String       @unique @map("zip_code")
  number        Int
  AddressType   AddressType? @relation(fields: [addressTypeId], references: [id])
  addressTypeId String?      @map("type")
  createdAt     DateTime?    @default(now()) @map("created_at")
  updatedAt     DateTime?    @updatedAt @map("updated_at")

  AddressesOnUsers AddressesOnUsers[]
  user             User[]

  @@map("addresses")
}

model User {
  id               String             @id
  firstName        String             @map("first_name")
  lastName         String             @map("last_name")
  active           Boolean
  birthday         String
  phone            String
  email            String             @unique
  password         String
  image            String
  createdAt        DateTime?          @default(now()) @map("created_at")
  updatedAt        DateTime?          @updatedAt @map("updated_at")
  Permissions      Permissions?       @relation(fields: [permissionsId], references: [id])
  permissionsId    String?            @map("permission_id")
  AddressesOnUsers AddressesOnUsers[]
  Addresses        Addresses[]

  @@map("users")
}

model AddressesOnUsers {
  user       User      @relation(fields: [user_id], references: [id])
  user_id    String
  address    Addresses @relation(fields: [address_id], references: [id])
  address_id String

  @@id([user_id, address_id])
  @@map("addresses_on_users")
}
