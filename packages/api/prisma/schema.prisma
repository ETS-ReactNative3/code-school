generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Actions {
  id            String       @id
  description   String
  createdAt     DateTime?    @default(now()) @map("created_at")
  updatedAt     DateTime?    @updatedAt @map("updated_at")
  Permissions   Permissions? @relation(fields: [permissionsId], references: [id])
  permissionsId String?

  @@map("actions")
}

model Permissions {
  id              String    @id
  description     String
  active          Boolean
  createdAt       DateTime? @default(now()) @map("created_at")
  updatedAt       DateTime? @updatedAt @map("updated_at")
  fullPrivilegies Boolean   @map("full_privileges")
  actions         Actions[]
  User            User[]

  @@map("permissions")
}

model AddressType {
  id          String      @id
  description String
  createdAt   DateTime?   @default(now()) @map("created_at")
  updatedAt   DateTime?   @updatedAt @map("updated_at")
  Addresses   Addresses[]

  @@map("address_type")
}

model Addresses {
  id               String             @id
  address          String
  zipCode          String             @unique @map("zip_code")
  number           Int
  createdAt        DateTime?          @default(now()) @map("created_at")
  updatedAt        DateTime?          @updatedAt @map("updated_at")
  AddressType      AddressType        @relation(fields: [type], references: [id])
  type             String
  AddressesOnUsers AddressesOnUsers[]
  user             User[]

  @@map("addresses")
}

model User {
  id               String             @id
  firstName        String             @map("first_name")
  lastName         String             @map("last_name")
  active           Boolean
  birthday         String
  phone            String
  email            String             @unique
  password         String
  image            String
  createdAt        DateTime?          @default(now()) @map("created_at")
  updatedAt        DateTime?          @updatedAt @map("updated_at")
  Permissions      Permissions?       @relation(fields: [permissionsId], references: [id])
  permissionsId    String?
  AddressesOnUsers AddressesOnUsers[]
  Addresses        Addresses[]

  @@map("users")
}

model AddressesOnUsers {
  user        User      @relation(fields: [userId], references: [id])
  userId      String
  address     Addresses @relation(fields: [addressesId], references: [id])
  addressesId String

  @@id([addressesId, userId])
  @@map("addresses_on_users")
}
